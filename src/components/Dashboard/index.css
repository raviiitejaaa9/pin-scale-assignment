/* 
 const {creditBalance, debitBalance} = data.reduce(
      (accumulator, current) => ({
        creditBalance:
          current.type === 'credit'
            ? accumulator.creditBalance + current.amount
            : accumulator.creditBalance,
        debitBalance:
          current.type === 'debit'
            ? accumulator.debitBalance + current.amount
            : accumulator.debitBalance,
      }),
      {creditBalance: 0, debitBalance: 0},
    )

    this.setState({
      creditBalance,
      debitBalance,
    })


    for (const each of data) {
      if (each.type === 'credit') {
        creditAmount += each.amount
      } else {
        debitAmount += each.amount
      }
    }

 const threeTransactionsUrl =
      'https://bursting-gelding-24.hasura.app/api/rest/all-transactions'
    const limit = 3
    const offset = 0
    const url = `${apiUrl}?limit=${limit}&offset=${offset}`
    // console.log(url)
    const transactionsResponse = await fetch(url)
    // console.log(transactionsResponse)


     const reqUser = userDetails.filter(eachUser => eachUser.email === username)
    if (reqUser.length === 0) {
      const msg = 'username is wrong'
      this.onSubmitFailure(msg)
    } else {
      const user = reqUser[0]
      if (user.password !== password) {
        const msg = 'password is wrong'
        this.onSubmitFailure(msg)
      } else {
        this.onSubmitSuccess(user)
      }
    }
*/

.dashboard-container {
  background-color: #f2f2f2;
  min-height: 100vh;
  width: 100%;
}

.debit-credit-sec {
  display: flex;
  flex-direction: row;
  justify-content: space-around;
  align-items: center;
  padding: 10px;
  width: 100%;
  height: 180px;
}

.debit-credit-card {
  width: 40%;
  height: 90%;
  background-color: #ffffff;
  border-radius: 8px;
  padding: 10px;
  color: black;
  display: flex;
  flex-direction: row;
  justify-content: space-between;
}
